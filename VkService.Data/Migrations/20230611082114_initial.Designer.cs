// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VkService.Data;

#nullable disable

namespace VkService.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230611082114_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3");

            modelBuilder.Entity("VkService.Data.Entities.VkMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RepostedFrom")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageId");

                    b.HasIndex("OwnerId", "Id")
                        .IsUnique();

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("VkService.Data.Entities.VkMessageSearch", b =>
                {
                    b.Property<int>("RowId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Rank")
                        .HasColumnType("REAL");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("RowId");

                    b.ToTable("messages_search", (string)null);

                    b.HasAnnotation("Sqlite:UseSqlReturningClause", false);
                });

            modelBuilder.Entity("VkService.Data.Entities.VkUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VkService.Data.Entities.VkMessageSearch", b =>
                {
                    b.HasOne("VkService.Data.Entities.VkMessage", "Message")
                        .WithOne("Content")
                        .HasForeignKey("VkService.Data.Entities.VkMessageSearch", "RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("VkService.Data.Entities.VkMessage", b =>
                {
                    b.Navigation("Content");
                });
#pragma warning restore 612, 618
        }
    }
}
